import { renderEndpoint } from "../../runtime/server/index.js";
import { AstroCookies, attachToResponse } from "../cookies/index.js";
import { getParamsAndProps, GetParamsAndPropsError } from "../render/core.js";
function createAPIContext(request, params) {
  return {
    cookies: new AstroCookies(request),
    request,
    params
  };
}
async function call(mod, opts) {
  const paramsAndPropsResp = await getParamsAndProps({ ...opts, mod });
  if (paramsAndPropsResp === GetParamsAndPropsError.NoMatchingStaticPath) {
    throw new Error(
      `[getStaticPath] route pattern matched, but no matching static path found. (${opts.pathname})`
    );
  }
  const [params] = paramsAndPropsResp;
  const context = createAPIContext(opts.request, params);
  const response = await renderEndpoint(mod, context, opts.ssr);
  if (response instanceof Response) {
    attachToResponse(response, context.cookies);
    return {
      type: "response",
      response
    };
  }
  return {
    type: "simple",
    body: response.body,
    encoding: response.encoding
  };
}
export {
  call
};
